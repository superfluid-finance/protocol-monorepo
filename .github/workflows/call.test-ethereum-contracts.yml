name: Reusable Workflow | Test Ethereum Contracts

on:
  workflow_call:
    inputs:
      run-coverage-tests:
        required: true
        type: boolean

jobs:
  test-ethereum-contracts:
    name: Test ethereum-contracts

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    defaults:
      run:
        shell: nix develop .#ci-node${{ matrix.node-version }} -c bash -xe {0}

    # Note: only do coverage test for node 20
    if: inputs.run-coverage-tests == false || matrix.node-version == 20

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: cachix/install-nix-action@v19
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Initialize devShell
        run: |
          node --version
          yarn --version
          solc --version

      - name: Yarn Install
        run: |
          yarn install --frozen-lockfile
          npx tsc --version
          npx hardhat --version

      - name: Lint and build
        run: |
          yarn lint
          yarn build
        working-directory: ./packages/ethereum-contracts

      ########################################
      ## Test Suite
      ########################################
      - name: Run test suite
        if: inputs.run-coverage-tests == false
        run: |
          echo "FOUNDRY_PROFILE=ci" >> $GITHUB_ENV
          echo "FOUNDRY_SOLC_VERSION=$SOLC" >> $GITHUB_ENV
          yarn test
          cat testing-benchmark.json
        working-directory: ./packages/ethereum-contracts
        env:
          # NOTE: This is currently unset and fork tests are not being run
          POLYGON_MAINNET_ARCHIVE_PROVIDER_URL: ${{ secrets.POLYGON_MAINNET_ARCHIVE_PROVIDER_URL }}

      ########################################
      ## Coverage Test
      ########################################
      - name: Run coverage test
        if: inputs.run-coverage-tests == true
        run: |
          echo "FOUNDRY_PROFILE=ci" >> $GITHUB_ENV
          echo "FOUNDRY_SOLC_VERSION=$SOLC" >> $GITHUB_ENV
          yarn test-coverage
        working-directory: ./packages/ethereum-contracts

      - name: Clean up and merge coverage artifacts
        if: inputs.run-coverage-tests == true
        run: ./tasks/coverage-cleanup.sh
        working-directory: ./packages/ethereum-contracts

      - name: Create coverage artifact
        if: inputs.run-coverage-tests == true
        uses: actions/upload-artifact@v3
        with:
          name: ethereum-contracts-coverage
          path: |
            packages/ethereum-contracts/coverage/
