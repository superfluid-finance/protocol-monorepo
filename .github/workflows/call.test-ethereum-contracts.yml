name: Reusable Workflow | Test Ethereum Contracts

on:
  workflow_call:
    inputs:
      run-coverage-tests:
        required: true
        type: boolean

jobs:
  # When this scrip is written, it is the only way to preparing conditional matrix:
  # Ref: https://stackoverflow.com/questions/65384420/how-do-i-make-a-github-action-matrix-element-conditional
  matrix-prep:
    name: Preparing Conditional Strategy Matrix

    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set matrix variable
        id: set-matrix
        run: |
          if [ "${{ inputs.run-coverage-tests }}" == "true" ];then
            echo "matrix={\"node-version\": [20]}" >> "$GITHUB_OUTPUT"
          else
            echo "matrix={\"node-version\": [18, 20]}" >> "$GITHUB_OUTPUT"
          fi

  test-ethereum-contracts:
    name: Test ethereum-contracts

    needs: [matrix-prep]

    runs-on: ubuntu-latest

    strategy:
      matrix: ${{ fromJson(needs.matrix-prep.outputs.matrix) }}

    env:
      DEV_SHELL_NAME: ci-node${{ matrix.node-version }}

    defaults:
      run:
        shell: nix develop .#${{ env.DEV_SHELL_NAME }} -c bash -xe {0}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set cache key prefix
        id: set-cache-key-prefix
        run: |
          node_version=${{ matrix.node-version }}
          if [ "${{ inputs.run-coverage-tests }}" == false ]; then
            v=ethereum-contracts-test-${node_version}-
          else
            v=ethereum-contracts-coverage-${node_version}-
          fi
          echo "cache_key_prefix=$v" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Setup workflow base
        id: base
        uses: ./.github/actions/setup-workflow-base
        with:
          package-name: ethereum-contracts
          cache-key-prefix: ${{ steps.set-cache-key-prefix.outputs.cache_key_prefix }}
          dev-shell-name: ${{ env.DEV_SHELL_NAME }}

      - name: Install dependencies
        if: steps.base.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile
          solc --version
          forge --version
          npx tsc --version
          npx hardhat --version

      - name: Lint and build
        if: steps.base.outputs.cache-hit != 'true'
        run: |
          yarn lint
          yarn build

      - name: Run test suite
        if: steps.base.outputs.cache-hit != 'true' && inputs.run-coverage-tests == false
        run: |
          echo "FOUNDRY_PROFILE=ci" >> $GITHUB_ENV
          yarn test
          cat testing-benchmark.json
        working-directory: ./packages/ethereum-contracts
        env:
          HARDHAT_TEST_JOBS: 4
          HARDHAT_RUN_PARALLEL: 1

      - name: Run coverage test
        if: steps.base.outputs.cache-hit != 'true' && inputs.run-coverage-tests == true
        run: |
          echo "FOUNDRY_PROFILE=ci" >> $GITHUB_ENV
          yarn test-coverage
        working-directory: ./packages/ethereum-contracts
        # NOTE: currently coverage report is not working properly in parallel mode.
        #
        # Upstream issue: https://github.com/NomicFoundation/hardhat/issues/4310
        # Though more likely, it is an issue to https://github.com/sc-forks/solidity-coverage
        env:
          # NOTE: 4 workers would overwhelm the free-tier github runner
          NODE_OPTIONS: --max_old_space_size=4096
          IS_COVERAGE_TEST: true
          HARDHAT_TEST_JOBS: 2
          HARDHAT_RUN_PARALLEL: 0

      - name: Clean up and merge coverage artifacts
        if: steps.base.outputs.cache-hit != 'true' && inputs.run-coverage-tests == true
        run: ./tasks/coverage-cleanup.sh
        working-directory: ./packages/ethereum-contracts

      - name: Create coverage artifact
        if: inputs.run-coverage-tests == true
        uses: actions/upload-artifact@v4
        with:
          name: ethereum-contracts-coverage
          path: |
            packages/ethereum-contracts/coverage/
