name: Reusable Workflow | Test SDK Core

on:
  workflow_call:
    inputs:
      subgraph-release:
        required: true
        type: string
      subgraph-endpoint:
        required: true
        type: string
      run-coverage-tests:
        required: true
        type: boolean

jobs:
  test-sdk-core:
    name: Test SDK-Core

    runs-on: ubuntu-latest

    env:
      ethereum-contracts-working-directory: ./packages/ethereum-contracts
      subgraph-working-directory: ./packages/subgraph
      sdk-core-working-directory: ./packages/sdk-core

    defaults:
      run:
        shell: nix develop -c bash -xe {0}

    steps:
      - uses: actions/checkout@v3

      - uses: cachix/install-nix-action@v19
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: "Install dependencies"
        run: yarn install --frozen-lockfile

      - name: "Build contracts"
        run: yarn build
        working-directory: ${{ env.ethereum-contracts-working-directory }}

      - name: "Start hardhat node"
        run: |
          ./tasks/startHardhatNode.sh start
        working-directory: ${{ env.sdk-core-working-directory }}

      - name: "Build SDK-Core"
        # build sdk-core because of auto linking to dependency
        run: yarn build
        working-directory: ${{ env.sdk-core-working-directory }}

      - name: "Deploy Framework and Tokens"
        run: npx hardhat run dev-scripts/run-deploy-contracts-and-token.js --network localhost
        working-directory: ${{ env.ethereum-contracts-working-directory }}

      - name: "Prepare files for local testing"
        run: yarn prepare-local
        working-directory: ${{ env.subgraph-working-directory }}

      - name: "Run setup-graph-node"
        run: |
          chmod +x ./tasks/setup-graph-node.sh
          ./tasks/setup-graph-node.sh
        working-directory: ${{ env.subgraph-working-directory }}

      - name: "Docker compose"
        run: docker-compose up &
        working-directory: ${{ env.subgraph-working-directory }}

      - name: "Build and deploy local subgraph"
        run: |
          yarn build-and-deploy-local
          # artificial slow down to give the subgraph time to sync
          sleep 30
        working-directory: ${{ env.subgraph-working-directory }}

      - name: "Run test suite"
        if: inputs.run-coverage-tests == false
        run: |
          yarn generate-graphql-schema:${{ inputs.subgraph-release }}
          ./tasks/setupTestEnvironment.sh
          npx hardhat test --network localhost
        working-directory: ${{ env.sdk-core-working-directory }}
        env:
          SUBGRAPH_RELEASE_TAG: ${{ inputs.subgraph-release }}
          SUBGRAPH_ENDPOINT: ${{ inputs.subgraph-endpoint }}

      - name: "Run coverage test"
        if: inputs.run-coverage-tests == true
        run: |
          yarn workspace @superfluid-finance/sdk-core test-coverage
        working-directory: ${{ env.sdk-core-working-directory }}
        env:
          SUBGRAPH_RELEASE_TAG: ${{ inputs.subgraph-release }}
          SUBGRAPH_ENDPOINT: ${{ inputs.subgraph-endpoint }}

      - name: "Create coverage artifact"
        if: inputs.run-coverage-tests == true
        uses: actions/upload-artifact@v3
        with:
          name: sdk-core-coverage
          path: |
            packages/sdk-core/coverage/
