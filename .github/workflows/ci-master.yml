name: CI Master

on:
  push:
    branches: ["master"]

jobs:
  build:
    name: Build and test of master branch

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Show contexts
        run: |
          echo github.event_name: ${{ github.event_name }}
          echo github.sha: ${{ github.sha }}
          echo github.repository: ${{ github.repository }}
          echo github.ref: ${{ github.ref }}
          echo github.head_ref: ${{ github.head_ref }}
          echo github.base_ref: ${{ github.base_ref }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install, lint, build, and test
        run: |
          yarn install --frozen-lockfile
          yarn lint
          yarn build
          yarn test

  coverage:
    name: Run coverage test of master branch

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Run coverage test
        run: |
          yarn install --frozen-lockfile
          yarn build
          cd packages/ethereum-contracts
          yarn test-coverage

      - name: Create coverage artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: |
            packages/ethereum-contracts/coverage/
            packages/ethereum-contracts/coverage.json

  create-release-draft:
    name: Create Release Draft

    runs-on: ubuntu-latest

    if: github.repository == 'superfluid-finance/protocol-monorepo'

    needs: [build, coverage]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
          registry-url: https://registry.npmjs.org/

      - name: Check package versions
        id: check_versions
        run: |
          PUBLISHED_ETHEREUM_CONTRACTS_VERSION=`npm show @superfluid-finance/ethereum-contracts version`
          NEW_ETHEREUM_CONTRACTS_VERSION=`jq -r .version packages/ethereum-contracts/package.json`
          if [ "$PUBLISHED_ETHEREUM_CONTRACTS_VERSION" != "$NEW_ETHEREUM_CONTRACTS_VERSION" ];then
            echo "PUBLISH_ETHEREUM_CONTRACTS=1" >> $GITHUB_ENV
            echo "ethereum-contracts changed: $PUBLISHED_ETHEREUM_CONTRACTS_VERSION -> $NEW_ETHEREUM_CONTRACTS_VERSION"
          else
            echo ethereum-contracts unchanged: $PUBLISHED_ETHEREUM_CONTRACTS_VERSION
          fi
          PUBLISHED_JS_SDK_VERSION=`npm show @superfluid-finance/js-sdk version`
          NEW_JS_SDK_VERSION=`jq -r .version packages/js-sdk/package.json`
          if [ "$PUBLISHED_JS_SDK_VERSION" != "$NEW_JS_SDK_VERSION" ];then
            echo "PUBLISH_JS_SDK=1" >> $GITHUB_ENV
            echo "js-sdk changed: $PUBLISHED_JS_SDK_VERSION -> $NEW_JS_SDK_VERSION"
          else
            echo js-sdk unchanged: $PUBLISHED_JS_SDK_VERSION
          fi
          echo "::set-output name=NEW_ETHEREUM_CONTRACTS_VERSION::$NEW_ETHEREUM_CONTRACTS_VERSION"
          echo "::set-output name=NEW_JS_SDK_VERSION::$NEW_JS_SDK_VERSION"

      - name: Create js-sdk release draft
        if: env.PUBLISH_JS_SDK == 1
        id: create_release_js_sdk
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: js-sdk@v${{ steps.check_versions.outputs.NEW_JS_SDK_VERSION }}
          release_name: js-sdk@v${{ steps.check_versions.outputs.NEW_JS_SDK_VERSION }}
          body: |
            Changes in this Release
            ## Changed
            ## Added
            ## Fixes
            ## Breaking
          draft: true

      - name: Create ethereum-contracts release draft
        if: env.PUBLISH_ETHEREUM_CONTRACTS == 1
        id: create_release_ethereum_contracts
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ethereum-contracts@v${{ steps.check_versions.outputs.NEW_ETHEREUM_CONTRACTS_VERSION }}
          release_name: ethereum-contracts@v${{ steps.check_versions.outputs.NEW_ETHEREUM_CONTRACTS_VERSION }}
          body: |
            Changes in this Release
            ## Changed
            ## Added
            ## Fixes
            ## Breaking
          draft: true
