name: CI Canary

on:
  push:
    branches: ["dev"]
    paths:
      - 'package.json'
      - 'packages/**'
      # - '**.md' commented-out because README updates should go to the packages
      - '.github/workflows/ci.canary.yml'

jobs:
  essential-build:
    name: Build and test essential packages of dev branch

    if: github.repository == 'superfluid-finance/protocol-monorepo'

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Show contexts
        run: |
          echo github.event_name: ${{ github.event_name }}
          echo github.sha: ${{ github.sha }}
          echo github.repository: ${{ github.repository }}
          echo github.ref: ${{ github.ref }}
          echo github.head_ref: ${{ github.head_ref }}
          echo github.base_ref: ${{ github.base_ref }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install, lint, build, and test
        run: |
          yarn install --frozen-lockfile
          yarn lint
          yarn build
          yarn test
        env:
          GOERLI_PROVIDER_URL: ${{ secrets.GOERLI_PROVIDER_URL }}

  ethereum-contracts-coverage:
    name: Run coverage test of ethereum-contracts of dev branch

    if: github.repository == 'superfluid-finance/protocol-monorepo'

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Run coverage test
        run: |
          yarn install --frozen-lockfile
          yarn build
          yarn workspace @superfluid-finance/ethereum-contracts test-coverage

      - name: Create coverage artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: |
            packages/ethereum-contracts/coverage/
            packages/ethereum-contracts/coverage.json

      - name: Codecov
        uses: codecov/codecov-action@v2
        with:
          files: packages/ethereum-contracts/coverage/lcov.info
          fail_ci_if_error: true
          name: ethereum-contracts-coverage
          flags: ethereum-contracts

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          path-to-lcov: packages/ethereum-contracts/coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}

  sdk-core-coverage:
    name: Run coverage test of sdk-core on dev branch

    if: github.repository == 'superfluid-finance/protocol-monorepo'

    runs-on: ubuntu-latest

    env:
      subgraph-working-directory: ./packages/subgraph
      contracts-working-directory: ./packages/ethereum-contracts
      js-sdk-working-directory: ./packages/js-sdk
      sdk-core-working-directory: ./packages/sdk-core

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: "Install yarn and ganache-cli"
        run: npm install -g yarn ganache-cli

      - name: "Install contract dependencies"
        run: yarn install
        working-directory: ${{ env.contracts-working-directory }}

      - name: "Build contracts"
        run: yarn run build:contracts
        working-directory: ${{ env.contracts-working-directory }}

      - name: "Run test suite"
        run: yarn test
        working-directory: ${{ env.sdk-core-working-directory }}

      - name: Create coverage artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: |
            packages/sdk-core/coverage/
            packages/sdk-core/coverage/coverage-final.json

      - name: Upload SDK-Core Coverage Results to codecov
        uses: codecov/codecov-action@v2
        with:
          files: packages/sdk-core/coverage/lcov.info
          fail_ci_if_error: true
          name: sdk-core-coverage
          flags: sdk-core
  
  subgraph-test:
    name: Run test of subgraph on dev branch

    if: github.repository == 'superfluid-finance/protocol-monorepo'

    runs-on: ubuntu-latest

    env:
      subgraph-working-directory: ./packages/subgraph
      contracts-working-directory: ./packages/ethereum-contracts
      js-sdk-working-directory: ./packages/js-sdk

    needs: [check]
    if: needs.check.outputs.build_subgraph

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: "Checkout graph node repo and set up local graph node"
        uses: actions/checkout@v2
        with:
          repository: graphprotocol/graph-node
          path: graph-node
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "Run setup because linux and docker-compose"
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          chmod +x setup.sh
          ./setup.sh
        working-directory: ./graph-node/docker
      
      - name: "Docker compose"
        run: docker-compose up &
        working-directory: ./graph-node/docker
      
      - name: "Install yarn and ganache-cli"
        run: npm install -g yarn ganache-cli
      
      - name: "Run ganache-cli node"
        run: ganache-cli --networkId 4447 -h 0.0.0.0 -m "test test test test test test test test test test test junk" &

      - name: "Run integration test suite"
        run: yarn test
        working-directory: ${{ env.subgraph-working-directory }}

  publish:
    name: Publish canary pakcages to registries

    needs: [essential-build, ethereum-contracts-coverage, sdk-core-coverage]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Setup canary package versions locally
        run: |
          shortRev=$(git rev-parse --short ${{ github.sha }})
          preId=dev.${shortRev}
          yarn lerna version prerelease --yes --no-git-tag-version --preid ${preId}

      - name: Publish to npm
        run: |
          tasks/npm-publish.sh packages/ethereum-contracts dev
          tasks/npm-publish.sh packages/js-sdk dev
          tasks/npm-publish.sh packages/sdk-core dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPMJS_TOKEN: ${{ secrets.NPMJS_TOKEN }}

  deploy:
    name: Deploy and upgrade testnets with canary ethereum-contracts build

    needs: [essential-build, ethereum-contracts-coverage, sdk-core-coverage]

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        network: [goerli]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Build
        run: |
          yarn install --frozen-lockfile
          yarn build

      - name: Deploy to ${{ matrix.network }}
        run: |
          cd packages/ethereum-contracts
          npx truffle exec --network ${{ matrix.network }} scripts/deploy-test-environment.js
        env:
          RELEASE_VERSION: master
          GOERLI_MNEMONIC: ${{ secrets.BUILD_AGENT_MNEMONIC  }}
          GOERLI_PROVIDER_URL: ${{ secrets.GOERLI_PROVIDER_URL }}
