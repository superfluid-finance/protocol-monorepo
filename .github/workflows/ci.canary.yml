name: CI Canary

on:
  push:
    branches: ["dev"]
    paths:
      - 'package.json'
      - 'packages/**'
      # - '**.md' commented-out because README updates should go to the packages
      - '.github/workflows/ci.canary.yml'
      - 'codecov.yml'

jobs:
  essential-build-and-test:
    name: Build and test essential packages of dev branch

    if: github.repository == 'superfluid-finance/protocol-monorepo'

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Show contexts
        run: |
          echo github.event_name: ${{ github.event_name }}
          echo github.sha: ${{ github.sha }}
          echo github.repository: ${{ github.repository }}
          echo github.ref: ${{ github.ref }}
          echo github.head_ref: ${{ github.head_ref }}
          echo github.base_ref: ${{ github.base_ref }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install, lint, build, and test
        run: |
          yarn install --frozen-lockfile
          yarn lint
          yarn build
          yarn test
        env:
          POLYGON_MAINNET_PROVIDER_URL: ${{ secrets.POLYGON_MAINNET_PROVIDER_URL }}

  subgraph-test:
    name: Run test of subgraph on dev branch

    if: github.repository == 'superfluid-finance/protocol-monorepo'

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: "Install yarn and ganache-cli"
        run: npm install -g yarn ganache-cli

      - name: "Run ganache-cli node"
        run: ganache-cli --networkId 4447 -h 0.0.0.0 -m "test test test test test test test test test test test junk" &

      - name: "Checkout graph node repo and set up local graph node"
        uses: actions/checkout@v3
        with:
          repository: graphprotocol/graph-node
          path: graph-node
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "Run setup because linux and docker-compose"
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          chmod +x setup.sh
          ./setup.sh
        working-directory: ./graph-node/docker

      - name: "Docker compose"
        run: docker-compose up &
        working-directory: ./graph-node/docker

      - name: "Run integration test suite"
        run: yarn workspace @superfluid-finance/subgraph test

  ethereum-contracts-coverage:
    name: Run coverage test of ethereum-contracts of dev branch

    if: github.repository == 'superfluid-finance/protocol-monorepo'

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Run coverage test
        run: |
          yarn install --frozen-lockfile
          yarn build
          yarn workspace @superfluid-finance/ethereum-contracts test-coverage

      - name: Create coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: ethereum-contracts-coverage
          path: |
            packages/ethereum-contracts/coverage/

  js-sdk-coverage:
    name: Run coverage test of js-sdk on dev branch

    if: github.repository == 'superfluid-finance/protocol-monorepo'

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Run coverage test
        run: |
          yarn install --frozen-lockfile
          yarn build
          yarn workspace @superfluid-finance/js-sdk test-coverage

      - name: Create coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: js-sdk-coverage
          path: |
            packages/js-sdk/coverage/

  sdk-core-coverage:
    name: Run coverage test of sdk-core on dev branch

    if: github.repository == 'superfluid-finance/protocol-monorepo'

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Run coverage test
        run: |
          yarn install --frozen-lockfile
          yarn build
          yarn workspace @superfluid-finance/sdk-core test-coverage

      - name: Create coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: sdk-core-coverage
          path: |
            packages/sdk-core/coverage/

  publish-coverage-reports:
    name: Publish coverage reports
    needs: [ethereum-contracts-coverage, js-sdk-coverage, sdk-core-coverage]

    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - name: Download ethereum-contracts-coverage
        uses: actions/download-artifact@v3
        with:
          name: ethereum-contracts-coverage
          path: packages/ethereum-contracts/coverage
      - name: Upload ethereum-contracts-coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          files: packages/ethereum-contracts/coverage/lcov.info
          name: ethereum-contracts-coverage
          flags: ethereum-contracts
          fail_ci_if_error: true

      - name: Download js-sdk-coverage
        uses: actions/download-artifact@v3
        with:
          name: js-sdk-coverage
          path: packages/js-sdk/coverage
      - name: Upload js-sdk-coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          files: packages/js-sdk/coverage/lcov.info
          name: js-sdk-coverage
          flags: js-sdk
          fail_ci_if_error: true

      - name: Download sdk-core-coverage
        uses: actions/download-artifact@v3
        with:
          name: sdk-core-coverage
          path: packages/sdk-core/coverage
      - name: Upload sdk-core-coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          files: packages/sdk-core/coverage/lcov.info
          name: sdk-core-coverage
          flags: sdk-core
          fail_ci_if_error: true

  publish-npm-packages:
    name: Publish canary packages to registries

    needs: [essential-build-and-test, subgraph-test, ethereum-contracts-coverage, js-sdk-coverage, sdk-core-coverage]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          repository: superfluid-finance/build-scripts
          path: build-scripts

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: |
          yarn --cwd packages/sdk-core set-default-subgraph-release-tag
          yarn build
        env:
          SUBGRAPH_RELEASE_TAG: dev

      - name: Setup canary package versions locally
        run: |
          shortRev=$(git rev-parse --short ${{ github.sha }})
          preId=dev.${shortRev}
          yarn lerna version prerelease --yes --no-git-tag-version --preid ${preId}

      - name: Publish to npm
        run: |
          tasks/npm-publish.sh packages/ethereum-contracts/ dev --verbose
          tasks/npm-publish.sh packages/js-sdk/ dev --verbose
          tasks/npm-publish.sh packages/sdk-core/ dev --verbose
          tasks/npm-publish.sh packages/sdk-redux/ dev --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPMJS_TOKEN: ${{ secrets.NPMJS_TOKEN }}

      - name: Build HTML documentation of SDK-s
        run: |
          yarn --cwd packages/sdk-core doc:html
          yarn --cwd packages/sdk-redux doc:html

      - name: Get versions for sdk-core & sdk-redux
        id: sdk-versions
        run: |
          SDK_CORE_VERSION=`jq -r .version packages/sdk-core/package.json`
          echo "::set-output name=SDK_CORE_VERSION::$SDK_CORE_VERSION"

          SDK_REDUX_VERSION=`jq -r .version packages/sdk-redux/package.json`
          echo "::set-output name=SDK_REDUX_VERSION::$SDK_REDUX_VERSION"

      - name: Upload sdk-core HTML documentation
        uses: ./build-scripts/s3cloudfront-hosting/actions/sync
        with:
          local_build_dir: packages/sdk-core/dist/docs
          aws_region: eu-west-2
          aws_access_key_id: ${{ secrets.SITE_DEPLOYER_AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.SITE_DEPLOYER_AWS_SECRET_ACCESS_KEY }}
          s3_uri: ${{ format('{0}sdk-core@{1}', secrets.SITE_DEPLOYER_AWS_S3_DOCS_URI, steps.sdk-versions.outputs.SDK_CORE_VERSION) }}
          cloudfront_distribution_id: E3SV855CTC9UJO

      - name: Upload sdk-redux HTML documentation
        uses: ./build-scripts/s3cloudfront-hosting/actions/sync
        with:
          local_build_dir: packages/sdk-redux/dist/docs
          aws_region: eu-west-2
          aws_access_key_id: ${{ secrets.SITE_DEPLOYER_AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.SITE_DEPLOYER_AWS_SECRET_ACCESS_KEY }}
          s3_uri: ${{ format('{0}sdk-redux@{1}', secrets.SITE_DEPLOYER_AWS_S3_DOCS_URI, steps.sdk-versions.outputs.SDK_REDUX_VERSION) }}
          cloudfront_distribution_id: E3SV855CTC9UJO

  upgrade-contracts:
    name: Upgrade ethereum-contracts on goerli testnet (protocol release version "test")

    needs: [publish-npm-packages]

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        network: [goerli]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Build
        run: |
          yarn install --frozen-lockfile
          yarn build

      - name: Deploy to ${{ matrix.network }}
        run: |
          cd packages/ethereum-contracts
          npx truffle exec --network ${{ matrix.network }} scripts/deploy-test-environment.js
        env:
          RELEASE_VERSION: master
          ETH_GOERLI_MNEMONIC: ${{ secrets.BUILD_AGENT_MNEMONIC  }}
          ETH_GOERLI_PROVIDER_URL: ${{ secrets.ETH_GOERLI_PROVIDER_URL }}