name: CI | Pre-Release Draft Subgraph Integration Test

on:
  pull_request:
    branches:
      - "release-subgraph-v1"
    paths:
      - "packages/sdk-core/**"
      - "packages/subgraph/**"
      - ".github/workflows/ci.pre-release-subgraph.yml"
      - ".github/workflows/call.setup-deploy-and-test-local-subgraph.yml"
      - ".github/workflows/call.test-subgraph-on-previous-sdk-core-versions.yml"

jobs:
  show-contexts:
    name: Show Contexts

    runs-on: ubuntu-latest

    steps:
      - name: Show contexts
        run: |
          echo github.event_name: ${{ github.event_name }}
          echo github.sha: ${{ github.sha }}
          echo github.repository: ${{ github.repository }}
          echo github.ref: ${{ github.ref }}
          echo github.head_ref: ${{ github.head_ref }}
          echo github.base_ref: ${{ github.base_ref }}

  # A. run sdk-core tests with dev endpoint subgraph
  # purpose: ensure the current sdk-core version works with the current subgraph implementation
  # assumption: dev endpoint is synced (do a manual check on https://portal.dev.superfluid.dev/subgraph.html)
  # result: this will break if there is an intentional breaking change (must document),
  #         otherwise it should ALWAYS work
  build-and-test-dev-endpoint-subgraph:
    uses: ./.github/workflows/call.setup-deploy-and-test-local-subgraph.yml
    name: Build and Test Subgraph (Release Branch)
    with:
      subgraph-release: dev
      run-sdk-core-tests: true

  # B. run subgraph integration tests
  # purpose: ensure the new subgraph feature passes the integration tests (double checking)
  # assumption: current subgraph implementation is to be deployed
  # result: this should always pass otherwise we're NG for release
  build-and-test-local-subgraph:
    uses: ./.github/workflows/call.setup-deploy-and-test-local-subgraph.yml
    name: Build and Test Subgraph (Release Branch)
    with:
      subgraph-release: ''
      run-sdk-core-tests: false

  # C. check previous versions of sdk-core with indexed dev endpoints
  # purpose: ensure that the currently deployed dev subgraph endpoint will work with previous sdk-core versions
  # assumption: dev is fully indexed
  # result: this will break previous sdk-core versions if there is an intentional breaking change (must document)
  #         otherwise it should ALWAYS work
  build-and-test-live-subgraph-previous-releases:
    uses: ./.github/workflows/call.test-subgraph-on-previous-sdk-core-versions.yml
    name: Test Query Schema and Queries Against Local and Deployed Dev Subgraphs with Previous SDK-Core Versions
    if: github.base_ref == 'release-subgraph-v1'
    with:
      # we check with dev endpoint here because v1 endpoints are to be deployed
      # we want to check here if the subgraph implementation in dev is safe to use
      # for v1 endpoints (backwards compatible)
      subgraph-release: dev
      subgraph-endpoint: ''