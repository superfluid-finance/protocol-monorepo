name: CI Feature Branches

on:
  # triggered by internal pushes
  push:
    branches-ignore: ["master", "dev"]
  # triggered by external PRs (filtered in the `check` job)
  pull_request:

jobs:
  check:

    runs-on: ubuntu-latest

    outputs:
      build_ethereum_contracts: ${{ env.BUILD_ETHEREUM_CONTRACTS }}
      build_js_sdk: ${{ env.BUILD_JS_SDK }}
      build_subgraph: ${{ env.BUILD_SUBGRAH }}

    # triggered by internal pushes or external PRs
    if: ${{ github.event_name == 'push' || github.event.pull_request.head.repo.full_name != 'superfluid-finance/protocol-monorepo' }}

    steps:
      - name: Show contexts
        run: |
          echo github.event_name: ${{ github.event_name }}
          echo github.sha: ${{ github.sha }}
          echo github.repository: ${{ github.repository }}
          echo github.ref: ${{ github.ref }}
          echo github.head_ref: ${{ github.head_ref }}
          echo github.base_ref: ${{ github.base_ref }}

      - uses: actions/checkout@v2

      - name: Check changeset
        run: tasks/check-changeset.sh ${{ github.sha }} dev

  test-ethereum-contracts:
    name: Build and test ethereum-contracts (Feature Branch)

    runs-on: ubuntu-latest

    needs: [check]

    if: needs.check.outputs.build_ethereum_contracts

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Check changeset
        run: tasks/check-changeset.sh ${{ github.sha }} dev

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install, lint and build
        run: |
          yarn install --frozen-lockfile
          yarn lint
          yarn build

      - name: Test ethereum-contracts
        run: |
          yarn workspace @superfluid-finance/ethereum-contracts test

  test-js-sdk:
    name: Build and test js-sdk (Feature Branch)

    runs-on: ubuntu-latest

    needs: [check]

    if: needs.check.outputs.build_js_sdk

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install, lint and build
        run: |
          yarn install --frozen-lockfilepull_request
          yarn lint
          yarn build

      - name: Test js-sdk
        run: |
          yarn workspace @superfluid-finance/js-sdk test

  test-subgraph:
    name: Build and test subgraph (Feature Branch)

    runs-on: ubuntu-latest

    needs: [check]

    if: needs.check.outputs.build_subgraph

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install, lint and build
        run: |
          yarn install --frozen-lockfilepull_request
          yarn lint
          yarn build
          # yarn workspace @superfluid-finance/subgraph build

  all-packages-tested:
    name: All packages tested (Feature Branch)

    runs-on: ubuntu-latest

    if: always()
    needs: [check, test-ethereum-contracts, test-js-sdk, test-subgraph]

    steps:
      - name: Test Results
        run: |
          if [ ! -z "${{ needs.check.outputs.build_ethereum_contracts }}" ];then
            Check if ethereum-contracts package test passes...
            test [ "${{ needs.test-ethereum-contracts.result }}" == "success" ]
          fi
          if [ ! -z "${{ needs.check.outputs.build_js_sdk }}" ];then
            Check if js-sdk package test passes...
            test [ "${{ needs.test-js-sdk.result }}" == "success" ]
          fi
          if [ ! -z "${{ needs.check.outputs.build_subgraph }}" ];then
            Check if subgraph package test passes...
            test [ "${{ needs.test-subgraph.result }}" == "success" ]
          fi
