name: Create PR Artifact

on:
  pull_request:
    types: [opened, ready_for_review, synchronize]

jobs:
  create_pr_artifact:
    name: Create PR Artifact

    runs-on: ubuntu-latest

    if: ${{ !github.event.pull_request.draft }}

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Show context
        run: |
          echo github.event_name: ${{ github.event_name }}
          echo github.sha: ${{ github.sha }}
          echo github.repository: ${{ github.repository }}
          echo github.ref: ${{ github.ref }}
          echo github.head_ref: ${{ github.head_ref }}
          echo github.base_ref: ${{ github.base_ref }}
          echo "github.event.pull_request"
          echo "  .number" ${{ github.event.pull_request.number }}
          echo "  .state" ${{ github.event.pull_request.state }}
          echo "  .locked" ${{ github.event.pull_request.locked }}
          echo "  .draft" ${{ github.event.pull_request.draft }}

      - name: Check changeset
        run: tasks/check-changeset.sh ${{ github.sha }} dev

      - name: Install dependencies
        if: env.BUILD_ANYTHING == 1
        run: yarn install --frozen-lockfile

      - name: Build
        if: env.BUILD_ANYTHING == 1
        run: yarn build

      - name: Create packages
        if: env.BUILD_ANYTHING == 1
        run: |
          dirName="bin/${{ github.event.number }}"
          mkdir -p $dirName
          for d in packages/*/ ; do
            (cd "$d" && tgz=$(npm pack) && cp $tgz "../../$dirName/")
          done
          cd $dirName
          sha="${{ github.event.pull_request.head.sha }}"
          for f in * ; do
            mv -- "$f" "${f%.tgz}-${sha:0:7}.tgz"
          done

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if: env.BUILD_ANYTHING == 1
        with:
          name: pr-packages
          path: bin
          retention-days: 1

      - name: Publish to github (testing)
        run: |
          cd bin/${{ github.event.number }}
          echo "
          @superfluid-finance:registry=https://npm.pkg.github.com
          //npm.pkg.github.com/:_authToken=${SUPERFLUID_GITHUB_TOKEN}
          " > .npmrc
          for f in * ; do
            npm --userconfig .npmrc publish $f --tag "PR$pr_number"
          done
        env:
          SUPERFLUID_GITHUB_TOKEN: ${{ secrets.SUPERFLUID_GITHUB_TOKEN }}
