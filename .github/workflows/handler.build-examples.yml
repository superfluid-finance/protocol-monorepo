name: Build Examples
env:
  GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}

on:
  push:
    paths:
      - 'examples/**'
      - '.github/workflows/handler.build-examples.yml'
  # after a new release is published
  workflow_run:
    workflows: ["Publish Release Package"]
    types:
      - completed
  # manual trigger
  workflow_dispatch:
  # every day
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '0 8 * * *'

jobs:
  build-example:
    name: Build example

    runs-on: ubuntu-latest

    env:
      CI: false # React UI builds may fail for warnings otherwise

    strategy:
      fail-fast: false # build all examples independently
      matrix:
        example: [rewards-distribution-token , tradeable-cashflow, budget-nft, nftbillboard-userdata, sdk-redux-examples/sdk-redux-react-typecript, sdk-redux-examples/sdk-redux-nextjs-typescript, employment-based-loan, simple-acl-close, beginner-examples/money-router, beginner-examples/token-spreader]
        install: [locked-install, clean-install]
        node-version: [16]

    steps:
      - uses: actions/checkout@v3
        with:
          path: monorepo

      - name: Check changeset
        if: github.event_name == 'push'
        run: tasks/check-changeset.sh ${{ github.sha }} dev
        working-directory: monorepo

      - name: Use Node.js ${{ matrix.node-version }}
        if: ${{ github.event_name != 'push' || env.BUILD_EXAMPLES == 1 }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install, build and test
        if: ${{ github.event_name != 'push' || env.BUILD_EXAMPLES == 1 }}
        run: |
          cp -R monorepo/examples/${{ matrix.example }} .
          cd "$(basename ${{ matrix.example }})"
          # cleanup all yarn.lock file and force updating dependencies per
          # package.json semver semantic
          if [ "${{ matrix.install }}" == clean-install ];then
            find . -name yarn.lock | xargs rm -f
          fi
          # ready to build and test, each example project must provide
          # their instructions here
          ./build-and-test.sh


  build-examples-done:
    name: Build examples done # An aggregated job used for PR criteria

    runs-on: ubuntu-latest

    needs: [build-example]

    if: always()

    steps:
      - name: Report success
        run: |
          test "${{ needs.build-example.result }}" == success || \
          test "${{ needs.build-example.result }}" == skipped
