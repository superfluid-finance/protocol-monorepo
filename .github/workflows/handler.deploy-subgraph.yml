name: Deploy Subgraph

on:
  workflow_dispatch:
    inputs:
      release_branch:
        description: 'Release branch (feature/dev/v1 ...)'
        required: true
        default: 'feature'

jobs:
  deploy-subgraph:
    name: Deploy Subgraph

    runs-on: ubuntu-latest

    env:
      subgraph-working-directory: ./packages/subgraph
      contracts-working-directory: ./packages/ethereum-contracts

    steps:
      - uses: actions/checkout@v2

      - name: "Install node"
        uses: "actions/setup-node@v2"
        with:
          cache: yarn
          node-version: "14"

      - name: "Install contract dependencies"
        run: yarn
        working-directory: ${{ env.contracts-working-directory }}

      - name: "Build contracts"
        run: yarn run build:contracts
        working-directory: ${{ env.contracts-working-directory }}

      - name: "Install subgraph dependencies"
        run: yarn
        working-directory: ${{ env.subgraph-working-directory }}

      - name: "Get ABI"
        run: node scripts/getAbi.js
        working-directory: ${{ env.subgraph-working-directory }}

      - name: "Generate subgraph manifest"
        run: "yarn run prepare-local" # NOTE: A hack to make codegen work
        working-directory: ${{ env.subgraph-working-directory }}

      - name: "Generate AssemblyScript types"
        run: "yarn run codegen"
        working-directory: ${{ env.subgraph-working-directory }}

      - name: "Deploy to endpoint"
        run: "yarn run deploy:${{ github.event.inputs.release_branch }}"
        working-directory: ${{ env.subgraph-working-directory }}
        env:
          THEGRAPH_ACCESS_TOKEN: ${{ secrets.THEGRAPH_ACCESS_TOKEN }}
