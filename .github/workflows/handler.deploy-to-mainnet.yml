name: Deploy to Mainnet

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Protocol release version (test/master/v1/etc.)'
        required: true
        default: 'v1'
      network:
        description: 'Mainnet on which to deploy/upgrade'
        required: true
      environments:
        description: 'Additional env vars, separated by semicolons'
        required: false

jobs:

  deploy-to-mainnet:
    name: Deploy to mainnet

    runs-on: ubuntu-latest

    env:
      RELEASE_VERSION: ${{ github.event.inputs.release_version }}
      DEFAULT_MNEMONIC: ${{ secrets.BUILD_AGENT_MNEMONIC }}
      # testnet web3 providers (leaving for testing)
      AVALANCHE_FUJI_PROVIDER_URL: ${{ secrets.AVALANCHE_FUJI_PROVIDER_URL }}
      # mainnet web3 providers
      ETH_MAINNET_PROVIDER_URL: ${{ secrets.ETH_MAINNET_PROVIDER_URL }}
      XDAI_MAINNET_PROVIDER_URL: ${{ secrets.XDAI_MAINNET_PROVIDER_URL }}
      POLYGON_MAINNET_PROVIDER_URL: ${{ secrets.POLYGON_MAINNET_PROVIDER_URL }}
      OPTIMISM_MAINNET_PROVIDER_URL: ${{ secrets.OPTIMISM_MAINNET_PROVIDER_URL }}
      ARBITRUM_ONE_PROVIDER_URL: ${{ secrets.ARBITRUM_ONE_PROVIDER_URL }}
      AVALANCHE_C_PROVIDER_URL: ${{ secrets.AVALANCHE_C_PROVIDER_URL }}
      BSC_MAINNET_PROVIDER_URL: ${{ secrets.BSC_MAINNET_PROVIDER_URL }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          repository: superfluid-finance/build-scripts
          path: build-scripts

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "yarn"

      - name: Build
        run: |
          yarn install --frozen-lockfile
          yarn build-for-contracts-dev

      - name: Deploy to ${{ github.event.inputs.network }}
        run: |
          cd packages/ethereum-contracts
          echo "${{ github.event.inputs.environments }}" | sed 's/;/\n/' > .env
          mkdir tmp
          npx truffle exec --network ${{ github.event.inputs.network }} scripts/deploy-framework.js
        env:
          GOVERNANCE_ADMIN_TYPE: MULTISIG
          OUTPUT_FILE: tmp/contract-addresses.txt

      - name: Upload new contract addresses
        uses: ./build-scripts/s3cloudfront-hosting/actions/sync
        with:
          local_build_dir: packages/ethereum-contracts/tmp
          aws_region: eu-west-2
          aws_access_key_id: ${{ secrets.SITE_DEPLOYER_AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.SITE_DEPLOYER_AWS_SECRET_ACCESS_KEY }}
          s3_uri: ${{ format('{0}{1}-contract-addrs@{2}', secrets.SITE_DEPLOYER_AWS_S3_DOCS_URI, github.event.inputs.network, github.run_id) }}
          cloudfront_distribution_id: E3JEO5R14CT8IH