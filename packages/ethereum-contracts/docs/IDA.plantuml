@startuml

left to right direction

frame IDA {
    together {
        class Index {
            bytes iID()
            uint128 indexValue
            uint128 totalUnitsApproved
            uint128 totalUnitsPending
        }
        note as iIDNote
            sha3("publisher", publisher, indexId)
        end note
        Index::iID --> iIDNote

        class IndexSubscription {
            bytes sID()
            uint32 subId # slotId in subs bitmap
            address publisher
            uint32 indexId
            uint128 indexValue
            uint128 units
        }
        note as sIDNote
            sha3("subscription", subscriber, iID)
        end note
        IndexSubscription::sID --> sIDNote
    }

    map "Account Agreement State Slots for IDA" as AccountASS {
        subsBitmap => 0 : SlotsBitmap.Bitmap\n_SUBSCRIBER_SUBS_BITMAP_STATE_SLOT_ID
        list_iIDs => [1<<128..1<<128+255] : **[iID | uint32.max]** : [Maybe SlotsBitmap.SlotData]\n_SUBSCRIBER_SUB_DATA_STATE_SLOT_ID_START
        publisherDeposit => 1<<32 : uint\n_PUBLISHER_DEPOSIT_STATE_SLOT_ID
    }
    AccountASS::list_iIDs --> Index
}

frame Notes {
    note as listSubscriptions
    <code>
    listSubscriptions subscriber =
        [subId...] = subsBitmap subscriber
        [iID...] = SlotsBitmapLibrary.listData [subId...]
        [sID...] = map (to_sID subscriber) [iID...]
        [subscriptions...] :: [IndexSubscription] = map getAgreementData [sID...]
    ]
    </code>
    end note

    note as subscriptionsExample
    <code>
    (0) bitmap => 0

    -> make first subscription
    (0) bitmap => 01
    (1<<128+0) => indexId of the publishder index that sbuscriber subsribes to (data0)
    listData -> ([0], [data0])

    -> make second subscription
    (0) bitmap => 11
    (1<<128+0) => first publisher index (data0)
    (1<<128+1) => second publisher index (data1)
    listData -> ([0, 1], [data0, data1])

    -> revoke first subscription
    (0) bitmap => 10 => [1] error([0])
    (1<<128+1) => second publisher index (data1)
    listData -> ([1], [data1])
    </code>
    end note
}

Notes -left[hidden]-> IDA

@enduml
