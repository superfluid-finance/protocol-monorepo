#!/bin/bash

# In all seriousness, this script should be written in perl. To the dearest leader Tim Toady.

export HOT_FUZZ_MODE=1

D="$(dirname "$0")"
L="$(readlink "$0")" # do not use -f since mac BSD coreutils does not like it

ECHIDNA_TEST=${ECHIDNA_TEST:-echidna-test}
HOTFUZZ_DIR=$D/"$(dirname "$L")"
set -xe

function apply_crytic_workaround() {
    # SEE https://github.com/crytic/echidna/issues/738
    [ -e "node_modules" ] || mkdir -p node_modules
    [ -d "node_modules/@superfluid-finance" ] || ln -sf ../../../node_modules/\@superfluid-finance node_modules/
    [ -d "node_modules/@openzeppelin" ] || ln -sf ../../../node_modules/\@openzeppelin node_modules/
}
function cleanup_crytic_workaround() {
    [ -L "node_modules/@superfluid-finance" ] && rm -f "node_modules/@superfluid-finance"
    [ -L "node_modules/@openzeppelin" ] && rm -f "node_modules/@openzeppelin"
}

function digest_last_corpus() {
    sleep 2 # wait for corpus dumped, just in case
    $HOTFUZZ_DIR/tasks/digest-corpus $(ls corpus/covered.*.txt | tail -n1)
}

function digests() {
    digest_last_corpus
}
trap digests SIGINT

function cleanup() {
    cleanup_crytic_workaround
}
trap cleanup EXIT

function oops () {
    echo "$@" >&2
    exit 1
}

function hott() {
    TEST_CONTRACT_CONFIG=$1
    TEST_CONTRACT=$(basename $TEST_CONTRACT_CONFIG)
    TEST_CONTRACT=${TEST_CONTRACT%%.yaml}
    [ ! -f "$TEST_CONTRACT_CONFIG" ] && oops "No $TEST_CONTRACT_CONFIG provided."

    rm -rf crytic-export/
    rm -rf build/hot-fuzz-contracts/
    npx truffle compile --all \
        && "$ECHIDNA_TEST" . --config <(cat $HOTFUZZ_DIR/echidna.yaml $TEST_CONTRACT_CONFIG) --contract $TEST_CONTRACT

    digests
}

apply_crytic_workaround

TEST_CONTRACT_CONFIG=$1
[ -z "$TEST_CONTRACT_CONFIG" ] && oops "No contract specified."
hott $TEST_CONTRACT_CONFIG
